version: '3.8'

services:
  # Base de donn√©es MariaDB
  database:
    image: mariadb:10.11
    container_name: dental_ecommerce_db_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/mysql
      - ./backend/backend/src/database/seeds/initial-data.sql:/docker-entrypoint-initdb.d/initial-data.sql
    networks:
      - dental_network_prod
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend NestJS
  backend:
    build:
      context: ./backend/backend
      dockerfile: Dockerfile
      target: production
    container_name: dental_ecommerce_backend_prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: database
      DB_PORT: 3306
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    volumes:
      - uploads_data:/app/uploads
      - ./backend/backend/logs:/app/logs
    networks:
      - dental_network_prod
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: dental_ecommerce_frontend_prod
    restart: unless-stopped
    networks:
      - dental_network_prod
    depends_on:
      - backend

  # Reverse Proxy Nginx
  nginx:
    image: nginx:alpine
    container_name: dental_ecommerce_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - dental_network_prod
    depends_on:
      - frontend
      - backend

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: dental_ecommerce_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - dental_network_prod
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data_prod:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

networks:
  dental_network_prod:
    driver: bridge

